Тестовое задание
Разработать упрощенную версию сайта Авито
На странице показывается список объявлений, загружаемых по API. Ссылки доступны по адресу https://avito.dump.academy.

Каждое объявление отображается в виде блока, который содержит:
заголовок объявления;
главное фото (первое в списке) + количество дополнительных;
цену (каждые 3 разряда разделять пробелом);
дату размещения объявления в формате 10 октября 10:37;
имя продавца и его рейтинг.
Фильтровать объявления можно:
по категории (недвижимость — immovable, фотоаппараты — cameras, автомобили — auto, ноутбуки — laptops);
по цене (возможность ввести цену «с» и «до»);
по избранным объявлениям.
Сортировать объявления можно:
по популярности - как в ответе сервера;
по возрастанию цены (от меньшей к большей);
по дате размещения объявлений (от новых к старым).
Избранное
Любое объявление можно добавить в избранное. Список избранных объявлений хранятся в браузере и не синхронизируются с сервером. Способ хранения произвольный, но реализован таким образом, чтобы при перезагрузке страницы данные не терялись.

Дизайн и технологии
Дизайн, framework и библиотеки могут быть выбраны на ваше усмотрение. Финальную версию разработанного приложения выложить на github.com.

var arr = ["Я", "иду", "домой"];
delete arr[1]; // значение с индексом 1 удалено
// теперь arr = ["Я", undefined, "домой"];
alert( arr[1] ); // undefined

function compareNumeric(a, b) {
  if (a > b) return 1;
  if (a < b) return -1; //return a - b;
}
var arr = [ 1, 2, 15 ];
arr.sort(compareNumeric);
alert(arr);  // 1, 2, 15

filter
Метод «arr.filter(callback[, thisArg])» используется для фильтрации массива через функцию.

Он создаёт новый массив, в который войдут только те элементы arr, для которых вызов callback(item, i, arr) возвратит true.

Например:

 




var arr = [1, -1, 2, -2, 3];

var positiveArr = arr.filter(function(number) {
  return number > 0;
});

alert( positiveArr ); // 1,2,3